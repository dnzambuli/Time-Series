date[!is.na(date) & date != "2024-06-04"]
as.Date(date[!is.na(date) & date != "2024-06-04"])
as.Date(as.numeric(date[!is.na(date) & date != "2024-06-04"]))
as.Date(as.numeric(date[!is.na(date) & date != "2024-06-04"]), origin = "1899-12-30")
library(dplyr)
# there is a challenge with casting in dplyr a step by step process is the best option
date = Patient_Data$Date_Ended
# Convert the date data with ongoing to "2024-06-04"
date[date == "Ongoing"] = "2024-06-04"
# convert all the data to numeric
# convert the numbers to dates
date[!is.na(date) & date != "2024-06-04"] = as.Date(as.numeric(date[!is.na(date) & date != "2024-06-04"]), origin = "1899-12-30")
# format to standard date format
date
date = Patient_Data$Date_Ended
# Convert the date data with ongoing to "2024-06-04"
date[date == "Ongoing"] = "2024-06-04"
# convert all the data to numeric
# convert the numbers to dates
date_b = date[!is.na(date) & date != "2024-06-04"]
date_b
as.Date(as.numeric(date_b), origin = "1899-12-30")
date[!is.na(date) & date != "2024-06-04"] = as.Date(as.numeric(date_b), origin = "1899-12-30")
# format to standard date format
date
as.Date(date)
date = Patient_Data$Date_Ended
# Convert the date data with ongoing to "2024-06-04"
date[date == "Ongoing"] = "2024-06-04"
as.character(as.Date(as.numeric(date_b), origin = "1899-12-30"))
# convert all the data to numeric
# convert the numbers to dates
date_b = date[!is.na(date) & date != "2024-06-04"]
date[!is.na(date) & date != "2024-06-04"] = as.character(as.Date(as.numeric(date_b), origin = "1899-12-30"))
# format to standard date format
date
clean_Data = Patient_Data
clean_Data$Date_Ended = date
clean_Data = clean_Data %>%
mutate(Date_Started = as.Date(Date_Started, format = "%Y-%m-%d"),
Date_Ended = as.Date(Date_Ended, format = "%Y-%m-%d"))
head(clean_Data)
library(survival)
library(survminer)
install.packages(survminer)
install.packages("survminer")
library(survival)
library(survminer)
surv_Data = data.frame(duration = as.numeric(clean_Data$Date_Ended - clean_Data$Date_Started),
event_observed = ifelse(!is.na(clean_Data$Date_Ended) & clean_Data$Date_Ended != "2024-06-04", 1, 0))
head(surv_Data)
surv_obj = Surv(time = surv_Data$duration, event = surv_Data$event_observed)
km_fit = survfit(surv_obj~1, data = clean_Data)
summary(km_fit)
ggsurvplot(km_fit, data = patient_data,
xlab = "Days",
ylab = "Survival Probability",
title = "Kaplan-Meier Survival Curve")
ggsurvplot(km_fit, data = clean_Data,
xlab = "Days",
ylab = "Survival Probability",
title = "Kaplan-Meier Survival Curve")
haz_fit = coxph(surv_obj~1, data = clean_Data)
# baseline hazard function
base_haz = basehaz(haz_fit, centered = F)
summary(haz_fit)
ggplot(base_haz, aes(x = time, y = hazard))+
geom_line()+
labs(x = "Days",
y = "Hazard",
title = "Baseline Hazard Function")
setwd("C:/Users/ADMIN/Documents/SEM 2 2024/STA3050 time series/Tasks_and_Assignments/subtask3")
knitr::opts_chunk$set(echo = TRUE)
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
2021 = c(51, 28, 41, 36),
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
"2021" = c(51, 28, 41, 36),
"2022" = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
library(dplyr)
data_long = data %>% pivot_longer(data, cols = c("2021", "2022") , value_to = "visitors", names = "season")
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
"2021" = c(51, 28, 41, 36),
"2022" = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
library(tidyr)
data_long = data %>% pivot_longer(data, cols = c("2021", "2022") , value_to = "visitors", names = "season")
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
"2021" = c(51, 28, 41, 36),
"2022" = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
library(tidyr)
data_long = pivot_longer(data, cols = c("2021", "2022") , value_to = "visitors", names = "season")
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
`2021` = c(51, 28, 41, 36),
`2022` = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
library(tidyr)
data_long = pivot_longer(data, cols = c(`2021`, `2022`) , value_to = "visitors", names = "season")
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
`2021` = c(51, 28, 41, 36),
`2022` = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
library(tidyr)
data_long = pivot_longer(data, cols = c(`2021`, `2022`) , value_to = "visitors", names_to = "season")
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
`2021` = c(51, 28, 41, 36),
`2022` = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
library(tidyr)
data_long = pivot_longer(data, cols = c(`2021`, `2022`) , values_to = "visitors", names_to = "season")
View(data)
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
`2021` = c(51, 28, 41, 36),
`2022` = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
`2021` = c(51, 28, 41, 36),
`2022` = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
library(tidyr)
data_long = pivot_longer(data, cols = c(`X2021`, `X2022`) , values_to = "visitors", names_to = "season")
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
`2021` = c(51, 28, 41, 36),
`2022` = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
seas_ind = c(162, 62, 87, 89),
`2021` = c(51, 28, 41, 36),
`2022` = c(54, 32, 45, 43))
library(tidyr)
data_long = pivot_longer(data, cols = c(`X2021`, `X2022`) , values_to = "visitors", names_to = "season")
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
seas_ind = c(162, 62, 87, 89),
visit_2021 = c(51, 28, 41, 36),
visit_2022 = c(54, 32, 45, 43))
library(tidyr)
data_long = pivot_longer(data, cols = c(visit_2021, visit_2022) , values_to = "visitors", names_to = "year")
data_long
data = data.frame(season = c("summer", "monsoon", "winter", "spring"),
visit_2021 = c(51, 28, 41, 36),
visit_2022 = c(54, 32, 45, 43),
seas_ind = c(162, 62, 87, 89))
library(tidyr)
data_long = pivot_longer(data, cols = c(visit_2021, visit_2022) , values_to = "visitors", names_to = "year")
data_long
library(dplyr)
data_long = data_long %>%
mutate(year = sub("visit_", "", year))
data_long
data_long$desnd_data = data_long$visitors/data_long$seas_ind * 100
data_long
data_long = data_long %>% arrange(year)
data_long
View(data_long)
data_long$t = seq(1, nrow(data_long))
med_t = median(data_long$t)
data_long$x_t = 2*(data_long$t - med_t)
data_long$des_x_t = data_long$desnd_data * data_long$x_t
data_long
data_long$x_t_sqrd = data_long$x_t ^ 2
data_long
beta_0 = sum(data_long$desnd_data) / nrow*(data_long)
beta_0 = sum(data_long$desnd_data) / n
data_long$desnd_data
str(data_long$desnd_data)
sum(data_long$desnd_data)
n
n = nrow(data_long)
beta_0 = sum(data_long$desnd_data) / n
beta_1 = sum(data_long$des_x_t) / sum(data_long$x_t_sqrd)
cat("beta 0 and beta 1:\n",beta_0, "\t", beta_1 )
data_long$trend = beta_0 + beta_1 * data_long$x_t
data_long
colnames(data_long)
library(ggplot2)
ggplot(data_long, aes(x = season))+
geom_line(aes(y = desnd_data), color = "deceasoned")+
geom_line(aes(y = trend), color = "trend")+
geom_line(aes(y = visitors), color = "visitors")+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deceasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
openxlsx::write.xlsx(data_long, "final.xlsx")
library(ggplot2)
ggplot(data_long, aes(x = season, group = year, color = year))+
geom_line(aes(y = desnd_data), color = "deceasoned")+
geom_line(aes(y = trend), color = "trend")+
geom_line(aes(y = visitors), color = "visitors")+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deceasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
colnames(data_long)
library(ggplot2)
ggplot(data_long, aes(x = season, group = year, color = year))+
geom_line(aes(y = desnd_data), color = "deceasoned")+
geom_line(aes(y = trend), color = "trend")+
geom_line(aes(y = visitors), color = "visitors")+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deceasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = season, group = year, color = year))+
geom_line(aes(y = desnd_data), color = "deseasoned")+
geom_line(aes(y = trend), color = "trend")+
geom_line(aes(y = visitors), color = "visitors")+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = season, group = year, color = year))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = season))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = season, group = year))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = t, group = year))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = t, group = season))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = t))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = season, group = t))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
library(ggplot2)
ggplot(data_long, aes(x = t, group = season, color = year))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
data_long$x = rep(seq(1,4), 2)
View(data_long)
data_long$x = rep(seq(1,4), 2)
library(ggplot2)
ggplot(data_long, aes(x = x, group = season))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
data_long$x = rep(seq(1,4), 2)
library(ggplot2)
ggplot(data_long, aes(x = x, group = t))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
data_long$x = rep(seq(1,4), 2)
library(ggplot2)
ggplot(data_long, aes(x = x))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
data_long$x = rep(seq(1,4), 2)
library(ggplot2)
ggplot(data_long, aes(x = t))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
data_long$x = rep(seq(1,4), 2)
library(ggplot2)
ggplot(data_long, aes(x = t, group = season))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"))+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
data_long$x = rep(seq(1,4), 2)
library(ggplot2)
ggplot(data_long, aes(x = interaction(season, year), group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
data_long_2 = data_long %>% arrange(trend)
ggplot(data_long_2, aes(x = interaction(season, year), group = 1))+
+   geom_line(aes(y = desnd_data, color = "deseasoned"))+
+   geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
+   geom_line(aes(y = visitors, color = "visitors"))+
+   labs(
+     title = "quarterly number of visitors for 2021 and 2022",
ggplot(data_long_2, aes(x = interaction(season, year), group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
View(data_long_2)
ggplot(data_long_2, aes(x = interaction(season, year)))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
ggplot(data_long_2, aes(x = interaction(season, year), group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
ggplot(data_long_2, aes(x = season, group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
ggplot(data_long_2, aes(x = t, group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
ggplot(data_long_2, aes(x = intersection(t, season), group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
ggplot(data_long_2, aes(x = intersection(year, season), group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
ggplot(data_long_2, aes(x = interaction(year, season), group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
ggplot(data_long, aes(x = t, group = 1))+
geom_line(aes(y = desnd_data, color = "deseasoned"))+
geom_line(aes(y = trend, color = "trend"), linetype = "dashed")+
geom_line(aes(y = visitors, color = "visitors"))+
labs(
title = "quarterly number of visitors for 2021 and 2022",
y = "visitors",
x = "seasons"
)+
scale_color_manual(name = "Legend", values = c("deseasoned" = "blue", "trend" = "red","visitors" = "green")) +
theme_minimal()
beta_0
beta_1
beta_0 + beta_1 * data_long$visitors
62.79 + 1.24*(seq(-15, 15, 1))
